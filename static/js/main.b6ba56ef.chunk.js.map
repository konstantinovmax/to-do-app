{"version":3,"sources":["components/Header/Header.js","components/Task/Task.js","components/Main/Main.js","components/AddTaskModal/AddTaskModal.js","components/AddButton/AddButton.js","components/EditTaskModal/EditTaskModal.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","tasks","length","taskState","onClick","onEditTaskEnabled","onEditTaskDisabled","Task","tasksEditState","type","onDeleteTask","task","id","onTaskClick","name","Main","map","handleDeleteTask","handleEditTaskModalOpen","AddTaskModal","React","useState","taskName","setTaskName","isOpen","onSubmit","e","preventDefault","onAddTaskSubmit","onCloseModal","noValidate","placeholder","onChange","target","value","AddButton","onOpenAddTaskModal","EditTaskModal","useEffect","App","isAddTaskModalOpen","setIsAddTaskModalOpen","setTasks","selectedTask","setSelectedTask","editTasksDisabled","setEditTasksDisabled","handleModalClose","newTasks","filter","newTask","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAYeA,MATf,SAAgBC,GACd,OACE,yBAAQC,UAAU,SAAlB,UACI,oBAAIA,UAAU,gBAAd,wDACCD,EAAME,MAAMC,QAAU,EAAKH,EAAMI,UAAY,wBAAQH,UAAU,iBAAiBI,QAASL,EAAMM,kBAAlD,wDAAwF,wBAAQL,UAAU,iBAAiBI,QAASL,EAAMO,mBAAlD,8DAA2F,O,YCc1NC,MAlBf,SAAcR,GAUZ,OACE,sBAAKC,UAAU,OAAf,UACKD,EAAMS,eAAiB,uBAAOC,KAAK,QAAQT,UAAU,sBAAyB,wBAAQS,KAAK,QAAQT,UAAU,sBAAsBI,QAV1I,WACEL,EAAMW,aAAaX,EAAMY,KAAKC,OAU1B,mBAAGZ,UAAU,cAAcI,QAPjC,WACEL,EAAMc,YAAYd,EAAMY,OAMpB,SAAkDZ,EAAMY,KAAKG,SAFtCf,EAAMY,KAAKC,KCO3BG,MAlBf,SAAchB,GACV,OACI,qBAAKC,UAAU,OAAf,SAEQD,EAAME,MAAMe,KAAI,SAACL,GAAD,OACZ,cAAC,EAAD,CACAA,KAAMA,EAENH,eAAgBT,EAAMS,eACtBE,aAAcX,EAAMkB,iBACpBJ,YAAad,EAAMmB,yBAHdP,EAAKC,U,MCkBfO,MAzBf,SAAsBpB,GAClB,MAAgCqB,IAAMC,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAaA,OACI,uBAAMvB,UAAS,yBAAoBD,EAAMyB,QAAU,+BAAiCC,SARxF,SAAsBC,GAClBA,EAAEC,iBACF5B,EAAM6B,gBAAgBN,GACtBC,EAAY,IACZxB,EAAM8B,gBAIsGC,YAAU,EAAtH,UACI,0BAAUhB,KAAK,OAAOL,KAAK,OAAOT,UAAU,2BAA2B+B,YAAY,iHAAuBC,SAblH,SAAuBN,GACnBH,EAAYG,EAAEO,OAAOC,QAYkHA,MAAOZ,IAC1I,sBAAKtB,UAAU,oCAAf,UACI,wBAAQA,UAAU,2DAA2DI,QAASL,EAAM8B,aAA5F,wDACA,wBAAQpB,KAAK,SAAST,UAAU,yDAAhC,qE,MCdDmC,MANf,SAAmBpC,GACjB,OACE,wBAAQC,UAAU,aAAaI,QAASL,EAAMqC,sB,MC2BnCC,MA5Bf,SAAuBtC,GACnB,MAAgCqB,IAAMC,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAgBA,OAJAH,IAAMkB,WAAU,WACZf,EAAYxB,EAAMY,KAAKG,QACxB,CAACf,EAAMY,OAGN,uBAAMX,UAAS,0BAAqBD,EAAMY,KAAKC,IAAM,gCAAkCa,SAX3F,SAAsBC,GAClBA,EAAEC,iBACF5B,EAAMY,KAAKG,KAAOQ,EAClBvB,EAAM8B,gBAQyGC,YAAU,EAAzH,UACI,uBAAOhB,KAAK,OAAOL,KAAK,OAAOT,UAAU,4BAA4B+B,YAAY,GAAGC,SAhB5F,SAAwBN,GACpBH,EAAYG,EAAEO,OAAOC,QAe6FA,MAAOZ,GAAY,KACjI,sBAAKtB,UAAU,qCAAf,UACI,wBAAQA,UAAU,6DAA6DI,QAASL,EAAM8B,aAA9F,wDACA,wBAAQpB,KAAK,SAAST,UAAU,2DAAhC,2ECyDDuC,MA1Ef,WACI,MAAoDnB,IAAMC,UAAS,GAAnE,mBAAOmB,EAAP,KAA2BC,EAA3B,KACA,EAA0BrB,IAAMC,SAAS,IAAzC,mBAAOpB,EAAP,KAAcyC,EAAd,KACA,EAAwCtB,IAAMC,SAAS,IAAvD,mBAAOsB,EAAP,KAAqBC,EAArB,KACA,EAAkDxB,IAAMC,UAAS,GAAjE,mBAAOwB,EAAP,KAA0BC,EAA1B,KAUA,SAASC,IACLN,GAAsB,GACtBG,EAAgB,IA0BtB,OACE,qBAAK5C,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACAK,kBAZJ,WACEyC,GAAqB,IAYnBxC,mBATJ,WACEwC,GAAqB,IASnB3C,UAAW0C,EACX5C,MAAOA,IAEP,cAAC,EAAD,CACAA,MAAOA,EACPO,eAAgBqC,EAChB3B,wBA5CJ,SAAiCP,GAC7BiC,EAAgBjC,IA4ChBM,iBA1BJ,SAA0BL,GACtB,IAAMoC,EAAW/C,EAAMgD,QAAO,SAACtC,GAAD,OAAUA,EAAKC,KAAOA,KACpD8B,EAASM,MA0BT,cAAC,EAAD,CACAZ,mBApDJ,WACIK,GAAsB,MAqDtB,cAAC,EAAD,CACAjB,OAAQgB,EACRX,aAAckB,EACdnB,gBA5CJ,SAA6BN,GACzB,GAAIA,EAAU,CACV,IAAM4B,EAAU,CACZtC,GAAIuC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBvC,KAAMQ,GAEVoB,EAAS,GAAD,mBAAKzC,GAAL,CAAYiD,SAwCxB,cAAC,EAAD,CACAvC,KAAMgC,EACNd,aAAckB,UC/DPO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6ba56ef.chunk.js","sourcesContent":["import './Header.css';\r\nimport React from 'react';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">Сегодня</h1>\r\n        {props.tasks.length >= 1 ? (props.taskState ? <button className=\"header__button\" onClick={props.onEditTaskEnabled}>Править</button> : <button className=\"header__button\" onClick={props.onEditTaskDisabled}>Отменить</button>) : ''}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import './Task.css';\r\nimport React from 'react';\r\n\r\nfunction Task(props) {\r\n\r\n  function deleteTask() {\r\n    props.onDeleteTask(props.task.id);\r\n  }\r\n\r\n  function handleClick() {\r\n    props.onTaskClick(props.task);\r\n  }\r\n\r\n  return (\r\n    <div className=\"task\" key={props.task.id}>\r\n        {props.tasksEditState ? <input type=\"radio\" className=\"task__radiobutton\" /> : <button type=\"reset\" className=\"task__delete-button\" onClick={deleteTask} />}\r\n        <p className=\"task__title\" onClick={handleClick}>{props.task.name}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import './Main.css';\r\nimport Task from '../Task/Task';\r\n\r\nfunction Main(props) {\r\n    return (\r\n        <div className=\"main\">\r\n            {\r\n                props.tasks.map((task) => (\r\n                    <Task\r\n                    task={task}\r\n                    key={task.id}\r\n                    tasksEditState={props.tasksEditState}\r\n                    onDeleteTask={props.handleDeleteTask}\r\n                    onTaskClick={props.handleEditTaskModalOpen}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './AddTaskModal.css';\r\n\r\nfunction AddTaskModal(props) {\r\n    const [taskName, setTaskName] = React.useState('');\r\n\r\n    function handleAddTask(e) {\r\n        setTaskName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onAddTaskSubmit(taskName);\r\n        setTaskName('');\r\n        props.onCloseModal();\r\n    }\r\n\r\n    return (\r\n        <form className={`add-task-modal ${props.isOpen && 'add-task-modal_type_is-open'}`} onSubmit={handleSubmit} noValidate>\r\n            <textarea name=\"task\" type=\"text\" className=\"add-task-modal__textarea\" placeholder=\"Введите текст задачи\" onChange={handleAddTask} value={taskName}/>\r\n            <div className=\"add-task-modal__buttons-container\">\r\n                <button className=\"add-task-modal__button add-task-modal__button_type_close\" onClick={props.onCloseModal}>Закрыть</button>\r\n                <button type=\"submit\" className=\"add-task-modal__button add-task-modal__button_type_add\">Добавить</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddTaskModal;\r\n","import './AddButton.css';\r\n\r\nfunction AddButton(props) {\r\n  return (\r\n    <button className=\"add-button\" onClick={props.onOpenAddTaskModal}></button>\r\n  );\r\n}\r\n\r\nexport default AddButton;\r\n","import React from 'react';\r\nimport './EditTaskModal.css';\r\n\r\nfunction EditTaskModal(props) {\r\n    const [taskName, setTaskName] = React.useState('');\r\n\r\n    function handleEditTask(e) {\r\n        setTaskName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.task.name = taskName;\r\n        props.onCloseModal();\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setTaskName(props.task.name);\r\n    }, [props.task]);\r\n\r\n    return (\r\n        <form className={`edit-task-modal ${props.task.id && 'edit-task-modal_type_is-open'}`} onSubmit={handleSubmit} noValidate>\r\n            <input name=\"task\" type=\"text\" className=\"edit-task-modal__textarea\" placeholder=\"\" onChange={handleEditTask} value={taskName || ''} />\r\n            <div className=\"edit-task-modal__buttons-container\">\r\n                <button className=\"edit-task-modal__button edit-task-modal__button_type_close\" onClick={props.onCloseModal}>Закрыть</button>\r\n                <button type=\"submit\" className=\"edit-task-modal__button edit-task-modal__button_type_add\">Сохранить</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EditTaskModal;\r\n","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport AddTaskModal from '../AddTaskModal/AddTaskModal';\nimport AddButton from '../AddButton/AddButton';\nimport EditTaskModal from '../EditTaskModal/EditTaskModal';\n\nfunction App() {\n    const [isAddTaskModalOpen, setIsAddTaskModalOpen] = React.useState(false);\n    const [tasks, setTasks] = React.useState([]);\n    const [selectedTask, setSelectedTask] = React.useState({});\n    const [editTasksDisabled, setEditTasksDisabled] = React.useState(true);\n\n    function handleAddTaskModalOpen() {\n        setIsAddTaskModalOpen(true);\n    }\n\n    function handleEditTaskModalOpen(task) {\n        setSelectedTask(task);\n    }\n\n    function handleModalClose() {\n        setIsAddTaskModalOpen(false);\n        setSelectedTask({});\n    }\n\n    function handleAddTaskSubmit(taskName) {\n        if (taskName) {\n            const newTask = {\n                id: Math.floor(Math.random() * 100),\n                name: taskName\n            }\n            setTasks([...tasks, newTask]);\n        }\n    }\n\n    function handleDeleteTask(id) {\n        const newTasks = tasks.filter((task) => task.id !== id);\n        setTasks(newTasks);\n    }\n\n    function handleEditTasksEnabled() {\n      setEditTasksDisabled(false);\n    }\n\n    function handleEditTasksDisabled() {\n      setEditTasksDisabled(true);\n    }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__content\">\n        <Header\n        onEditTaskEnabled={handleEditTasksEnabled}\n        onEditTaskDisabled={handleEditTasksDisabled}\n        taskState={editTasksDisabled}\n        tasks={tasks}\n        />\n        <Main\n        tasks={tasks}\n        tasksEditState={editTasksDisabled}\n        handleEditTaskModalOpen={handleEditTaskModalOpen}\n        handleDeleteTask={handleDeleteTask}\n        />\n        <AddButton\n        onOpenAddTaskModal={handleAddTaskModalOpen}\n        />\n        <AddTaskModal\n        isOpen={isAddTaskModalOpen}\n        onCloseModal={handleModalClose}\n        onAddTaskSubmit={handleAddTaskSubmit}\n        />\n        <EditTaskModal\n        task={selectedTask}\n        onCloseModal={handleModalClose}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}